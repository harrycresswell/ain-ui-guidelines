@charset "UTF-8";
/**
 * Breakpoints
 *
$base-font-size = 100%/16px
  *
*/
/**
 * Brand Colors
 */
/**
 * Greyscale
 */
/**
 * UI Colors
 */
/**
 * Typography
 */
/**
 * Font families
 */
/**
 * Font sizes
 */
/**
 * Font weights
 */
/**
 * Line-heights
 */
/**
 * Breakpoints
 *
 *
$base-font-size = 100%/16px
  *
*/
/**
* Mobile-first styles FTW
*
Example:
*/
aside.primary {
  /* Regular content */ }
  @media (min-width: 37.5em) {
    aside.primary {
      /* responsive content */ } }

/**
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    contenteditable attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that are clearfixed.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.cf:before,
.cf:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.cf:after {
  clear: both; }

/**
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */
.cf {
  *zoom: 1; }

/**
 * Base styles
 */
/**
 * Enable font anti-aliasing in
 * 1. Firefox
 * 2. Chrome
 */
html {
  height: 100%;
  -moz-osx-font-smoothing: grayscale;
  /* 1 */
  -webkit-font-smoothing: antialiased;
  /* 2 */ }

body {
  color: #1B202F;
  font-family: "myriad-pro", sans-serif;
  -webkit-font-feature-settings: "kern" 1;
     -moz-font-feature-settings: "kern" 1;
          font-feature-settings: "kern" 1;
  -webkit-font-kerning: normal;
     -moz-font-kerning: normal;
          font-kerning: normal;
  line-height: 1.5rem;
  min-height: 100%;
  overflow-x: hidden;
  text-rendering: optimizeLegibility; }

/**
 * Ensure all 'a' elements have correct cursor style
 */
a {
  color: inherit;
  cursor: pointer; }

/**
 * Reset font-weight of header elements
 */
h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 400; }

/**
 * Reset the margin of these elements.
 */
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
figure,
p,
pre {
  margin: 0; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
/* stylelint-disable selector-no-qualifying-type */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  cursor: pointer;
  /* 2 */ }

/* stylelint-enable selector-no-qualifying-type */
html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/*! sanitize.css v4.1.0 | CC0 License | github.com/jonathantneal/sanitize.css */
/* Display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Elements of HTML (https://www.w3.org/TR/html5/semantics.html)
   ========================================================================== */
/**
 * 1. Remove repeating backgrounds in all browsers (opinionated).
 * 2. Add box sizing inheritence in all browsers (opinionated).
 */
*,
::before,
::after {
  background-repeat: no-repeat;
  /* 1 */
  box-sizing: inherit;
  /* 2 */ }

/**
 * 1. Add text decoration inheritance in all browsers (opinionated).
 * 2. Add vertical alignment inheritence in all browsers (opinionated).
 */
::before,
::after {
  text-decoration: inherit;
  /* 1 */
  vertical-align: inherit;
  /* 2 */ }

/**
 * 1. Add border box sizing in all browsers (opinionated).
 * 2. Add the default cursor in all browsers (opinionated).
 * 3. Add a flattened line height in all browsers (opinionated).
 * 4. Prevent font size adjustments after orientation changes in IE and iOS.
 */
html {
  box-sizing: border-box;
  /* 1 */
  cursor: default;
  /* 2 */
  font-family: sans-serif;
  /* 3 */
  line-height: 1.5;
  /* 3 */
  -ms-text-size-adjust: 100%;
  /* 4 */
  -webkit-text-size-adjust: 100%;
  /* 4 */ }

/* Sections (https://www.w3.org/TR/html5/sections.html)
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Correct the font sizes and margins on `h1` elements within
 * `section` and `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: .67em 0; }

/* Grouping content (https://www.w3.org/TR/html5/grouping-content.html)
   ========================================================================== */
/**
 * 1. Correct font sizing inheritance and scaling in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * 1. Correct the height in Firefox.
 * 2. Add visible overflow in Edge and IE.
 */
hr {
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * Remove the list style on navigation lists in all browsers (opinionated).
 */
nav ol,
nav ul {
  list-style: none; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Add a bordered underline effect in all browsers.
 * 2. Remove text decoration in Firefox 40+.
 */
abbr[title] {
  border-bottom: 1px dotted;
  /* 1 */
  text-decoration: none;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct colors in IE 9-.
 */
mark {
  background-color: #ffff00;
  color: #000000; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Correct the font size in all browsers.
 */
small {
  font-size: 83.3333%; }

/**
 * Change the positioning on superscript and subscript elements
 * in all browsers (opinionated).
 * 1. Correct the font size in all browsers.
 */
sub,
sup {
  font-size: 83.3333%;
  /* 1 */
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -.25em; }

sup {
  top: -.5em; }

/*
 * Remove the text shadow on text selections (opinionated).
 * 1. Restore the coloring undone by defining the text shadow (opinionated).
 */
::-moz-selection {
  background-color: #b3d4fc;
  /* 1 */
  color: #000000;
  /* 1 */
  text-shadow: none; }

::selection {
  background-color: #b3d4fc;
  /* 1 */
  color: #000000;
  /* 1 */
  text-shadow: none; }

/* Embedded content (https://www.w3.org/TR/html5/embedded-content-0.html)
   ========================================================================== */
/*
 * Change the alignment on media elements in all browers (opinionated).
 */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Change the fill color to match the text color in all browsers (opinionated).
 */
svg {
  fill: currentColor; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Links (https://www.w3.org/TR/html5/links.html#links)
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove the gaps in underlines in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline when hovering in all browsers (opinionated).
 */
a:hover {
  outline-width: 0; }

/* Tabular data (https://www.w3.org/TR/html5/tabular-data.html)
   ========================================================================== */
/*
 * Remove border spacing in all browsers (opinionated).
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/* transform-style:  (https://www.w3.org/TR/html5/forms.html)
   ========================================================================== */
/**
 * 1. Remove the default styling in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  background-color: transparent;
  /* 1 */
  border-style: none;
  /* 1 */
  color: inherit;
  /* 1 */
  font-size: 1em;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Correct the overflow in IE.
 * 1. Correct the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance in Edge, Firefox, and IE.
 * 1. Remove the inheritance in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent the WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Correct the focus styles unset by the previous rule.
 */
:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the border, margin, and padding in all browsers.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: .35em .625em .75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 2 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Remove the vertical scrollbar in IE.
 * 2. Change the resize direction on textareas in all browsers (opinionated).
 */
textarea {
  overflow: auto;
  /* 1 */
  resize: vertical;
  /* 2 */ }

/**
 * Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  padding: 0; }

/**
 * Correct the cursor style on increment and decrement buttons in Chrome.
 */
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari for OS X.
 */
::-webkit-search-cancel-button,
::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style on placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: .54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* WAI-ARIA (https://www.w3.org/TR/html5/dom.html#wai-aria)
   ========================================================================== */
/**
 * Change the cursor on busy elements (opinionated).
 */
[aria-busy="true"] {
  cursor: progress; }

/*
 * Change the cursor on control elements (opinionated).
 */
[aria-controls] {
  cursor: pointer; }

/*
 * Change the cursor on disabled, not-editable, or otherwise
 * inoperable elements (opinionated).
 */
[aria-disabled] {
  cursor: default; }

/* User interaction (https://www.w3.org/TR/html5/editing.html)
   ========================================================================== */
/*
 * Remove the tapping delay on clickable elements (opinionated).
 * 1. Remove the tapping delay in IE 10.
 */
a,
area,
button,
input,
label,
select,
textarea,
[tabindex] {
  -ms-touch-action: manipulation;
  /* 1 */
  touch-action: manipulation; }

/*
 * Change the display on visually hidden accessible elements (opinionated).
 */
[hidden][aria-hidden="false"] {
  clip: rect(0, 0, 0, 0);
  display: inherit;
  position: absolute; }

[hidden][aria-hidden="false"]:focus {
  clip: auto; }

h1, h2, h3, h4, h5, h6,
ul, ol, dl,
blockquote, p, address,
hr,
table,
fieldset, figure,
pre {
  margin-bottom: 3rem; }

button:focus {
  outline: none; }

h1 {
  font-size: 3rem; }

h2 {
  font-size: 2.25rem; }

h3 {
  font-size: 1.75rem; }

h4 {
  font-size: 1.5rem; }

h5 {
  font-size: 1.25rem; }

h6 {
  font-size: 16px; }

a {
  text-decoration: none;
  color: #4A8CFF; }
  a:hover, a:focus {
    color: #005cfd; }

li > ul,
li > ol {
  margin-left: 0;
  margin-bottom: 0; }

/**
 * Enable basic responsive image support
 */
img {
  max-width: 100%;
  vertical-align: middle; }

blockquote {
  quotes: "“" "”"; }
  blockquote p {
    text-indent: -0.42em; }
    blockquote p:before {
      content: open-quote; }
    blockquote p:after {
      content: no-close-quote; }
    blockquote p:last-of-type {
      margin-bottom: 0; }
      blockquote p:last-of-type:after {
        content: close-quote; }

.o-wrapper {
  max-width: 940px;
  margin-right: auto;
  margin-left: auto;
  padding-right: 10px;
  padding-left: 10px; }

/*------------------------------------*    #FLEXBOX GRID
\*------------------------------------*/
.o-flex--3 {
  -ms-flex-preferred-size: 30%;
      flex-basis: 30%; }

.o-flex--2 {
  -ms-flex-preferred-size: 47%;
      flex-basis: 47%; }

@media (min-width: 62em) {
  .o-flex {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between; } }

.o-layout {
  margin: 0;
  padding: 0;
  list-style: none;
  margin-left: -1.5rem; }

.o-layout__item {
  display: inline-block;
  padding-left: 1.5rem; }

.o-media {
  display: table;
  width: 100%; }

.o-media__img,
.o-media__body {
  display: table-cell;
  vertical-align: top; }

.o-media__img {
  padding-right: 1.5rem; }
  .o-media__img img {
    display: block;
    max-width: none; }

.o-media__body {
  width: 100%; }

/*
Component: Core button
*/
.Button {
  text-align: center;
  cursor: pointer;
  -webkit-transition-duration: 0.4s;
  /* Safari */
  transition-duration: 0.4s;
  border-radius: 4px;
  box-sizing: border-box;
  outline: 0; }

/**
 * Component Core: Group Button Style
 */
.Button-group {
  font-size: 0; }

.Button-group > .Button--primary:first-of-type {
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px; }

.Button-group > .Button--primary:last-of-type {
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px; }

/**
 * Component Modifier: Primary Button Style
 */
.Button--primary {
  background: #4A8CFF;
  border: none;
  color: #ffffff; }

/**
 * Component Modifier: Secondary Button Style
 */
.Button--secondary {
  background: #F2F6F9;
  border: 1px solid #CDD3D9;
  color: #4F5766; }

/**
 * Component Modifier: UI Button Style
 */
.Button--positive {
  background: #13CE66;
  color: #FFFFFF; }

.Button--negative {
  background: #FF4949;
  color: #FFFFFF; }

/**
 * Component Modifier: Ghost Button Style
 */
.Button--ghost {
  border: 1px solid #FFFFFF;
  color: #FFFFFF; }

/**
 * Component Modifier: Round Button Style
 */
.Button--round {
  border-radius: 39px !important; }

/**
 * Component Modifier: Theme Button Style
 */
.Button--theme-blue {
  background: #FFFFFF;
  border: solid 1px #FFFFFF;
  color: #403FFF;
  font-weight: 600; }

/**
 * Component Modifier: FAB Button Style
 */
.Button--floating {
  line-height: 55.5px;
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);
  width: 55.5px;
  height: 55.5px;
  border-radius: 50%; }

.Button--floating i {
  font-size: 1.4rem !important;
  color: #fff;
  line-height: 37px; }

/**
 * Component State: Primary Button Style
 */
.Button--primary:hover,
.Button--primary:focus,
.Button--primary:active,
.Button--primary.is-pressed {
  background: #3B7CEE; }

/**
 * Component State: Secondary Button Style
 */
.Button--secondary:hover,
.Button--secondary:focus,
.Button--secondary:active,
.Button--secondary.is-pressed {
  background: #EEF3F7;
  border: 1px solid #9CABB9;
  color: #253142; }

/**
 * Component State: Ghost Button Style
 */
.Button--ghost:hover,
.Button--ghost:focus,
.Button--ghost:active,
.Button--ghost.is-pressed {
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid #FFFFFF;
  color: #FFFFFF; }

/**
 * Component State: UI Button Styles
 */
.Button--positive:hover,
.Button--positive:focus,
.Button--positive:active,
.Button--positive.is-pressed {
  background: #17BF62; }

.Button--negative:hover,
.Button--negative:focus,
.Button--negative:active,
.Button--negative.is-pressed {
  background: #F04444; }

/**
 * Component State: Theme Button Style
 */
.Button--theme-blue:hover,
.Button--theme-blue:focus,
.Button--theme-blue:active,
.Button--theme-blue.is-pressed {
  background: #403FFF;
  border: solid 1px #FFFFFF;
  color: #FFFFFF; }

/**
 * Component State: Disabled Button
 */
.Button.is-disabled {
  background-color: #F2F6F9;
  box-shadow: inset 0 0 0 1px #e0e6ed;
  color: #D8E2EC;
  pointer-events: none;
  cursor: default; }

/**
 * Component Modifier: Button Sizes
 */
.Button--l {
  font-size: 16px;
  padding: 0px 70px;
  height: 50px; }

.Button--m {
  font-size: 14px;
  padding: 0px 30px;
  height: 40px; }

.Button--s {
  font-size: 12px;
  padding: 0px 22px;
  height: 30px; }

/**
 * Component Modifier: Icon Sizes
 */
.Icon--s {
  height: 30px;
  width: 30px; }

.Icon--m {
  height: 40px;
  width: 40px; }

.Icon--l {
  height: 50px;
  width: 50px; }

.Icon:focus,
.Icon:active,
.Icon.is-pressed {
  background: rgba(74, 140, 255, 0.1);
  border: 1px solid #4A8CFF; }

/* Rules for colour of the icon when pressed. */
.Icon:focus i,
.Icon:active i,
.Icon.is-pressed i {
  color: #4A8CFF; }

/* Material Design icons */
.material-icons {
  vertical-align: middle;
  position: relative;
  top: -3px;
  left: 0px; }

/* Rules for sizing the icon. */
.material-icons.md-14 {
  font-size: 14px; }

.material-icons.md-18 {
  font-size: 18px; }

.material-icons.md-24 {
  font-size: 24px; }

.u-container-white-border {
  border: solid 1px #D8E2EC;
  border-radius: 4px; }

.u-container-dark-border {
  background: #253142;
  border-radius: 4px; }

.u-container-blue {
  background: #403FFF;
  border-radius: 4px; }

.u-padding-l {
  padding: 3rem; }

.u-link-bare {
  text-decoration: none !important; }

.u-link-natural {
  text-decoration: underline !important;
  color: inherit !important; }

.u-link-obvious {
  text-decoration: underline !important; }

.u-marginTop-s {
  margin-top: 1.25rem; }

.u-marginBottom-s {
  margin-bottom: 1.5rem; }

.u-marginBottom-l {
  margin-bottom: 3rem; }

.u-padding-s {
  padding: 1.25rem; }

.u-padding-m {
  padding: 1.5rem; }

.u-padding-l {
  padding: 3rem; }

.u-pr-10 {
  padding-right: 10px; }

.width-100 {
  width: 100%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
